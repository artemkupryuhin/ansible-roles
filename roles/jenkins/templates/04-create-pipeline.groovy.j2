import jenkins.model.*
import hudson.model.*
import hudson.plugins.git.*
import org.jenkinsci.plugins.workflow.job.WorkflowJob
import org.jenkinsci.plugins.workflow.cps.CpsScmFlowDefinition
import com.coravy.hudson.plugins.github.*

jenkins = Jenkins.getInstance()

def jobName          = '{{ jenkins.project_name }}'
def githubRepoUrl    = '{{ git.url }}'
def githubBranch     = '{{ git.branch }}'
def credentialId     = 'git-cred-1'
def jenkinsfilePath  = '{{ jenkins.filePath }}'

def branchConfig     = [new BranchSpec(githubBranch)]
def userConfig       = [new UserRemoteConfig(githubRepoUrl, null, null, credentialId)]
def scm              = new GitSCM(userConfig, branchConfig, false, [], null, null, null)
def flowDefinition   = new CpsScmFlowDefinition(scm, jenkinsfilePath)

flowDefinition.setLightweight(true)

def job = new WorkflowJob(jenkins, jobName)
job.definition = flowDefinition
job.setConcurrentBuild(false)

jenkins.save()
jenkins.reload()

AbstractItem it = (AbstractItem)Jenkins.getInstance().getItem(jobName)
it.authToken = new hudson.model.BuildAuthorizationToken('{{ jenkins.token }}')
it.save()
